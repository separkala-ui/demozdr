version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: zdr-app:latest
    container_name: zdr_app
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    env_file:
      - .env.docker
    depends_on:
      - mysql
      - redis
    networks:
      - zdr

  web:
    image: nginx:1.25-alpine
    container_name: zdr_web
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - zdr

  horizon:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: zdr-app:latest
    container_name: zdr_horizon
    restart: unless-stopped
    command: php artisan horizon
    env_file:
      - .env.docker
    volumes:
      - ./:/var/www/html
    depends_on:
      - app
      - redis
    networks:
      - zdr

  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: zdr-app:latest
    container_name: zdr_scheduler
    restart: unless-stopped
    command: php artisan schedule:work
    env_file:
      - .env.docker
    volumes:
      - ./:/var/www/html
    depends_on:
      - app
    networks:
      - zdr

  redis:
    image: redis:7-alpine
    container_name: zdr_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - zdr

  mysql:
    image: mysql:8.0
    container_name: zdr_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-zdr}
      MYSQL_USER: ${DB_USERNAME:-zdr}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - zdr

volumes:
  mysql_data:

networks:
  zdr:
    driver: bridge
